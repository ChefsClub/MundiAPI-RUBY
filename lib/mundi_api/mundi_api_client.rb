# mundi_api
#
# This file was automatically generated by APIMATIC v2.0 (
# https://apimatic.io ).

module MundiApi
  #  mundi_api client class.
  class MundiApiClient
    # Access to subscriptions controller.
    # @return [SubscriptionsController] Returns a controller object.
    def subscriptions
      @subscriptions ||= SubscriptionsController.new(configuration: @configuration)
    end

    # Access to orders controller.
    # @return [OrdersController] Returns a controller object.
    def orders
      @orders ||= OrdersController.new(configuration: @configuration)
    end

    # Access to plans controller.
    # @return [PlansController] Returns a controller object.
    def plans
      @plans ||= PlansController.new(configuration: @configuration)
    end

    # Access to invoices controller.
    # @return [InvoicesController] Returns a controller object.
    def invoices
      @invoices ||= InvoicesController.new(configuration: @configuration)
    end

    # Access to customers controller.
    # @return [CustomersController] Returns a controller object.
    def customers
      @customers ||= CustomersController.new(configuration: @configuration)
    end

    # Access to charges controller.
    # @return [ChargesController] Returns a controller object.
    def charges
      @charges ||= ChargesController.new(configuration: @configuration)
    end

    # Access to recipients controller.
    # @return [RecipientsController] Returns a controller object.
    def recipients
      @recipients ||= RecipientsController.new(configuration: @configuration)
    end

    # Access to tokens controller.
    # @return [TokensController] Returns a controller object.
    def tokens
      @tokens ||= TokensController.new(configuration: @configuration)
    end

    # Access to sellers controller.
    # @return [SellersController] Returns a controller object.
    def sellers
      @sellers ||= SellersController.new(configuration: @configuration)
    end

    # Access to transactions controller.
    # @return [TransactionsController] Returns a controller object.
    def transactions
      @transactions ||= TransactionsController.new(configuration: @configuration)
    end

    # Access to transfers controller.
    # @return [TransfersController] Returns a controller object.
    def transfers
      @transfers ||= TransfersController.new(configuration: @configuration)
    end

    # Returns the configuration object for easy access.
    # @return [Configuration] Returns a configuration instance.
    def config
      @configuration
    end

    # Initializer with authentication and configuration parameters.
    def initialize(basic_auth_user_name: nil, basic_auth_password: nil, secret_key: nil)
      @configuration = Configuration.new(basic_auth_user_name,
                                         basic_auth_password,
                                         secret_key)
    end
  end
end
